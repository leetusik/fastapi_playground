version: "3.8"

services:
    # Redis service for Celery broker and result backend
    redis:
        image: redis:7-alpine
        container_name: fastapi-redis
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        command: redis-server --appendonly yes
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 3s
            retries: 5

    # FastAPI application
    fastapi:
        build: .
        container_name: fastapi-app
        ports:
            - "8000:8000"
        volumes:
            - ./backend:/app
        environment:
            - REDIS_URL=redis://redis:6379/0
        depends_on:
            redis:
                condition: service_healthy
        command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/"]
            interval: 30s
            timeout: 10s
            retries: 3

    # Single Celery worker that prioritizes urgent tasks over normal tasks
    # Worker checks urgent-queue first, then normal-queue
    celery-worker:
        build: .
        container_name: celery-priority-worker
        volumes:
            - ./backend:/app
        environment:
            - REDIS_URL=redis://redis:6379/0
        depends_on:
            redis:
                condition: service_healthy
        command: celery -A celery_worker.app worker --loglevel=info --queues=urgent-queue,normal-queue --concurrency=1 --optimization=fair

    # Celery Flower for monitoring (optional)
    flower:
        build: .
        container_name: celery-flower
        ports:
            - "5555:5555"
        volumes:
            - ./backend:/app
        environment:
            - REDIS_URL=redis://redis:6379/0
        depends_on:
            redis:
                condition: service_healthy
        command: celery -A celery_worker.app flower --port=5555

volumes:
    redis_data:
